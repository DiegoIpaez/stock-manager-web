// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  users             User[]
  roles_permissions RolePermission[]

  @@index([name])
  @@map(name: "roles")
}

enum PermissionMethod {
  GET
  POST
  PUT
  DELETE
}

model Permission {
  id             Int              @id @default(autoincrement())
  path           String           @db.VarChar(255)
  method         PermissionMethod
  description    String?          @db.VarChar(255)
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  RolePermission RolePermission[]

  @@map(name: "permissions")
}

model RolePermission {
  role_id       Int
  permission_id Int

  role       Role       @relation(fields: [role_id], references: [id])
  permission Permission @relation(fields: [permission_id], references: [id])

  @@id([role_id, permission_id])
  @@map("roles_permissions")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  password   String    @db.VarChar(70)
  first_name String    @db.VarChar(255)
  last_name  String    @db.VarChar(255)
  disabled   Boolean   @default(false)
  deleted    Boolean   @default(false)
  last_login DateTime?
  role_id    Int?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  role Role? @relation(fields: [role_id], references: [id])

  @@index([email])
  @@map(name: "users")
}

model Image {
  id          Int      @id @default(autoincrement())
  path        String   @unique @db.VarChar(255)
  title       String?  @db.VarChar(150)
  description String?  @db.VarChar(150)
  disabled    Boolean  @default(false)
  deleted     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  products_images ProductImage[]

  @@map(name: "images")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(150)
  description String   @db.Text()
  price       Decimal  @db.Decimal(10, 3)
  stock       Int      @default(0)
  disabled    Boolean  @default(false)
  deleted     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  products_images ProductImage[]

  @@index([name])
  @@map(name: "products")
}

model ProductImage {
  product_id Int
  image_id   Int

  product Product @relation(fields: [product_id], references: [id])
  image   Image   @relation(fields: [image_id], references: [id])

  @@id([product_id, image_id])
  @@map("product_images")
}
